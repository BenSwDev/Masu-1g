{
  "totalFiles": 95,
  "totalScenarios": 169,
  "fileAnalysis": [
    {
      "fileName": "booking-actions.ts",
      "filePath": "\\actions\\booking-actions.ts",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 211,
      "validations": 153,
      "userRoles": [
        "guest",
        "professional",
        "member",
        "admin",
        "partner"
      ],
      "complexity": 364
    },
    {
      "fileName": "gift-voucher-actions.ts",
      "filePath": "\\actions\\gift-voucher-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 153,
      "validations": 43,
      "userRoles": [
        "guest",
        "admin",
        "member",
        "professional",
        "partner"
      ],
      "complexity": 196
    },
    {
      "fileName": "user-subscription-actions.ts",
      "filePath": "\\actions\\user-subscription-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 50,
      "validations": 18,
      "userRoles": [
        "member",
        "admin",
        "guest"
      ],
      "complexity": 68
    },
    {
      "fileName": "partner-coupon-batch-actions.ts",
      "filePath": "\\actions\\partner-coupon-batch-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        }
      ],
      "conditions": 24,
      "validations": 34,
      "userRoles": [
        "partner",
        "admin"
      ],
      "complexity": 58
    },
    {
      "fileName": "auth.ts",
      "filePath": "\\lib\\auth\\auth.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles"
        }
      ],
      "conditions": 42,
      "validations": 8,
      "userRoles": [
        "member",
        "admin",
        "professional",
        "partner"
      ],
      "complexity": 50
    },
    {
      "fileName": "account-actions.ts",
      "filePath": "\\actions\\account-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 20,
      "validations": 24,
      "userRoles": [],
      "complexity": 44
    },
    {
      "fileName": "guest-booking-wizard.tsx",
      "filePath": "\\components\\booking\\guest-booking-wizard.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 33,
      "validations": 10,
      "userRoles": [
        "guest",
        "admin"
      ],
      "complexity": 43
    },
    {
      "fileName": "coupon-actions.ts",
      "filePath": "\\actions\\coupon-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        }
      ],
      "conditions": 21,
      "validations": 18,
      "userRoles": [
        "admin",
        "partner"
      ],
      "complexity": 39
    },
    {
      "fileName": "otp-form.tsx",
      "filePath": "\\components\\auth\\login\\otp-form.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 27,
      "validations": 11,
      "userRoles": [
        "member"
      ],
      "complexity": 38
    },
    {
      "fileName": "admin-bookings-columns.tsx",
      "filePath": "\\components\\dashboard\\admin\\bookings\\admin-bookings-columns.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 36,
      "validations": 2,
      "userRoles": [
        "professional",
        "admin",
        "guest"
      ],
      "complexity": 38
    },
    {
      "fileName": "notification-actions.ts",
      "filePath": "\\actions\\notification-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 23,
      "validations": 14,
      "userRoles": [],
      "complexity": 37
    },
    {
      "fileName": "auth-actions.ts",
      "filePath": "\\actions\\auth-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles"
        }
      ],
      "conditions": 17,
      "validations": 19,
      "userRoles": [
        "member",
        "professional"
      ],
      "complexity": 36
    },
    {
      "fileName": "guest-payment-step.tsx",
      "filePath": "\\components\\booking\\steps\\guest-payment-step.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 8,
      "validations": 22,
      "userRoles": [
        "guest"
      ],
      "complexity": 30
    },
    {
      "fileName": "password-reset-actions.ts",
      "filePath": "\\actions\\password-reset-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        }
      ],
      "conditions": 10,
      "validations": 16,
      "userRoles": [],
      "complexity": 26
    },
    {
      "fileName": "booking-schemas.ts",
      "filePath": "\\lib\\validation\\booking-schemas.ts",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 4,
      "validations": 21,
      "userRoles": [
        "guest"
      ],
      "complexity": 25
    },
    {
      "fileName": "professional-actions.ts",
      "filePath": "\\actions\\professional-actions.ts",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 19,
      "validations": 5,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 24
    },
    {
      "fileName": "guest-info-step.tsx",
      "filePath": "\\components\\booking\\steps\\guest-info-step.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 5,
      "validations": 17,
      "userRoles": [
        "guest"
      ],
      "complexity": 22
    },
    {
      "fileName": "comprehensive-booking-edit-modal.tsx",
      "filePath": "\\components\\dashboard\\admin\\bookings\\comprehensive-booking-edit-modal.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 18,
      "validations": 4,
      "userRoles": [
        "professional",
        "admin",
        "guest"
      ],
      "complexity": 22
    },
    {
      "fileName": "professional-sms-actions.ts",
      "filePath": "\\actions\\professional-sms-actions.ts",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 15,
      "validations": 6,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 21
    },
    {
      "fileName": "payment-method-actions.ts",
      "filePath": "\\actions\\payment-method-actions.ts",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 12,
      "validations": 8,
      "userRoles": [
        "member"
      ],
      "complexity": 20
    },
    {
      "fileName": "register-form.tsx",
      "filePath": "\\components\\auth\\register\\register-form.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 9,
      "validations": 11,
      "userRoles": [
        "professional"
      ],
      "complexity": 20
    },
    {
      "fileName": "guest-booking-confirmation.tsx",
      "filePath": "\\components\\booking\\steps\\guest-booking-confirmation.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 16,
      "validations": 3,
      "userRoles": [
        "guest"
      ],
      "complexity": 19
    },
    {
      "fileName": "booking-details-view.tsx",
      "filePath": "\\components\\dashboard\\member\\bookings\\booking-details-view.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 12,
      "validations": 7,
      "userRoles": [
        "professional",
        "member",
        "admin"
      ],
      "complexity": 19
    },
    {
      "fileName": "bookings-columns.tsx",
      "filePath": "\\components\\dashboard\\member\\bookings\\bookings-columns.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 17,
      "validations": 2,
      "userRoles": [
        "member"
      ],
      "complexity": 19
    },
    {
      "fileName": "booking.ts",
      "filePath": "\\lib\\db\\models\\booking.ts",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 0,
      "validations": 19,
      "userRoles": [
        "guest",
        "admin",
        "professional"
      ],
      "complexity": 19
    },
    {
      "fileName": "page.tsx",
      "filePath": "\\app\\dashboard\\(user)\\(roles)\\professional\\booking-management\\[bookingId]\\page.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 14,
      "validations": 4,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 18
    },
    {
      "fileName": "booking-wizard.tsx",
      "filePath": "\\components\\dashboard\\member\\book-treatment\\booking-wizard.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 13,
      "validations": 4,
      "userRoles": [],
      "complexity": 17
    },
    {
      "fileName": "professional-profile.ts",
      "filePath": "\\lib\\db\\models\\professional-profile.ts",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 2,
      "validations": 15,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 17
    },
    {
      "fileName": "preferences-actions.ts",
      "filePath": "\\actions\\preferences-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        }
      ],
      "conditions": 10,
      "validations": 4,
      "userRoles": [],
      "complexity": 14
    },
    {
      "fileName": "booking-confirmation.tsx",
      "filePath": "\\components\\dashboard\\member\\book-treatment\\steps\\booking-confirmation.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 9,
      "validations": 5,
      "userRoles": [
        "professional",
        "admin",
        "member"
      ],
      "complexity": 14
    },
    {
      "fileName": "payment-step.tsx",
      "filePath": "\\components\\dashboard\\member\\book-treatment\\steps\\payment-step.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 6,
      "validations": 7,
      "userRoles": [],
      "complexity": 13
    },
    {
      "fileName": "profile-actions.ts",
      "filePath": "\\actions\\profile-actions.ts",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 9,
      "validations": 3,
      "userRoles": [],
      "complexity": 12
    },
    {
      "fileName": "login-form.tsx",
      "filePath": "\\components\\auth\\login\\login-form.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles"
        }
      ],
      "conditions": 7,
      "validations": 5,
      "userRoles": [
        "member"
      ],
      "complexity": 12
    },
    {
      "fileName": "guest-summary-step.tsx",
      "filePath": "\\components\\booking\\steps\\guest-summary-step.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 9,
      "validations": 3,
      "userRoles": [
        "guest"
      ],
      "complexity": 12
    },
    {
      "fileName": "admin-bookings-client.tsx",
      "filePath": "\\components\\dashboard\\admin\\bookings\\admin-bookings-client.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 9,
      "validations": 0,
      "userRoles": [
        "admin",
        "member",
        "professional"
      ],
      "complexity": 9
    },
    {
      "fileName": "professional-booking-view-actions.ts",
      "filePath": "\\actions\\professional-booking-view-actions.ts",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 8,
      "validations": 0,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 8
    },
    {
      "fileName": "booking-source-step.tsx",
      "filePath": "\\components\\dashboard\\member\\book-treatment\\steps\\booking-source-step.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 5,
      "validations": 3,
      "userRoles": [],
      "complexity": 8
    },
    {
      "fileName": "professional-responses-dialog.tsx",
      "filePath": "\\components\\dashboard\\admin\\bookings\\professional-responses-dialog.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 5,
      "validations": 2,
      "userRoles": [
        "professional"
      ],
      "complexity": 7
    },
    {
      "fileName": "professionals-management.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\professionals-management.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 4,
      "validations": 3,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 7
    },
    {
      "fileName": "member-bookings-client.tsx",
      "filePath": "\\components\\dashboard\\member\\bookings\\member-bookings-client.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 7,
      "validations": 0,
      "userRoles": [
        "member"
      ],
      "complexity": 7
    },
    {
      "fileName": "payment-method-form.tsx",
      "filePath": "\\components\\dashboard\\member\\payment-methods\\payment-method-form.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 4,
      "validations": 3,
      "userRoles": [],
      "complexity": 7
    },
    {
      "fileName": "payment-method.ts",
      "filePath": "\\lib\\db\\models\\payment-method.ts",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 0,
      "validations": 7,
      "userRoles": [],
      "complexity": 7
    },
    {
      "fileName": "payment-method-card.tsx",
      "filePath": "\\components\\dashboard\\member\\payment-methods\\payment-method-card.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 6,
      "validations": 0,
      "userRoles": [],
      "complexity": 6
    },
    {
      "fileName": "professional-response.ts",
      "filePath": "\\lib\\db\\models\\professional-response.ts",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 0,
      "validations": 6,
      "userRoles": [
        "professional"
      ],
      "complexity": 6
    },
    {
      "fileName": "forgot-password-form.tsx",
      "filePath": "\\components\\auth\\forgot-password\\forgot-password-form.tsx",
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        }
      ],
      "conditions": 2,
      "validations": 2,
      "userRoles": [],
      "complexity": 4
    },
    {
      "fileName": "professional-profile-dialog.tsx",
      "filePath": "\\components\\dashboard\\admin\\professional-management\\professional-profile-dialog.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 4,
      "validations": 0,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 4
    },
    {
      "fileName": "professional-edit-modal.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\professional-edit-modal.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 2,
      "validations": 2,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 4
    },
    {
      "fileName": "professional-basic-info-tab.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\tabs\\professional-basic-info-tab.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected"
        }
      ],
      "conditions": 2,
      "validations": 2,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 4
    },
    {
      "fileName": "auth-redirect.tsx",
      "filePath": "\\components\\auth\\auth-redirect.tsx",
      "scenarios": [
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles"
        }
      ],
      "conditions": 3,
      "validations": 0,
      "userRoles": [],
      "complexity": 3
    },
    {
      "fileName": "auth-provider.tsx",
      "filePath": "\\components\\auth\\providers\\auth-provider.tsx",
      "scenarios": [
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles"
        }
      ],
      "conditions": 2,
      "validations": 0,
      "userRoles": [],
      "complexity": 2
    },
    {
      "fileName": "professional-management.tsx",
      "filePath": "\\components\\dashboard\\admin\\professional-management\\professional-management.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 2,
      "validations": 0,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 2
    },
    {
      "fileName": "payment-method-selector.tsx",
      "filePath": "\\components\\common\\purchase\\payment-method-selector.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 1,
      "validations": 0,
      "userRoles": [
        "member"
      ],
      "complexity": 1
    },
    {
      "fileName": "professional-form-dialog.tsx",
      "filePath": "\\components\\dashboard\\admin\\professional-management\\professional-form-dialog.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 1,
      "validations": 0,
      "userRoles": [
        "professional",
        "admin"
      ],
      "complexity": 1
    },
    {
      "fileName": "professional-bookings-tab.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\tabs\\professional-bookings-tab.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        },
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [
        "professional"
      ],
      "complexity": 0
    },
    {
      "fileName": "professional-financial-tab.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\tabs\\professional-financial-tab.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [
        "professional"
      ],
      "complexity": 0
    },
    {
      "fileName": "professional-treatments-tab.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\tabs\\professional-treatments-tab.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [],
      "complexity": 0
    },
    {
      "fileName": "professional-work-areas-tab.tsx",
      "filePath": "\\components\\dashboard\\admin\\professionals\\tabs\\professional-work-areas-tab.tsx",
      "scenarios": [
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [
        "professional"
      ],
      "complexity": 0
    },
    {
      "fileName": "bookings-table-skeleton.tsx",
      "filePath": "\\components\\dashboard\\member\\bookings\\bookings-table-skeleton.tsx",
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [],
      "complexity": 0
    },
    {
      "fileName": "payment-methods-client.tsx",
      "filePath": "\\components\\dashboard\\member\\payment-methods\\payment-methods-client.tsx",
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option"
        }
      ],
      "conditions": 0,
      "validations": 0,
      "userRoles": [],
      "complexity": 0
    }
  ],
  "keyFindings": [
    {
      "category": "Most Complex Files",
      "items": [
        {
          "name": "booking-actions.ts",
          "complexity": 364,
          "scenarios": 5
        },
        {
          "name": "gift-voucher-actions.ts",
          "complexity": 196,
          "scenarios": 2
        },
        {
          "name": "user-subscription-actions.ts",
          "complexity": 68,
          "scenarios": 2
        },
        {
          "name": "partner-coupon-batch-actions.ts",
          "complexity": 58,
          "scenarios": 1
        },
        {
          "name": "auth.ts",
          "complexity": 50,
          "scenarios": 4
        },
        {
          "name": "account-actions.ts",
          "complexity": 44,
          "scenarios": 2
        },
        {
          "name": "guest-booking-wizard.tsx",
          "complexity": 43,
          "scenarios": 5
        },
        {
          "name": "coupon-actions.ts",
          "complexity": 39,
          "scenarios": 1
        },
        {
          "name": "otp-form.tsx",
          "complexity": 38,
          "scenarios": 2
        },
        {
          "name": "admin-bookings-columns.tsx",
          "complexity": 38,
          "scenarios": 5
        }
      ]
    },
    {
      "category": "User Role Coverage",
      "items": [
        {
          "role": "guest",
          "files": 12,
          "scenarios": 38
        },
        {
          "role": "professional",
          "files": 27,
          "scenarios": 34
        },
        {
          "role": "member",
          "files": 14,
          "scenarios": 36
        },
        {
          "role": "admin",
          "files": 24,
          "scenarios": 12
        },
        {
          "role": "partner",
          "files": 5,
          "scenarios": 0
        }
      ]
    },
    {
      "category": "Validation Coverage",
      "items": [
        {
          "type": "email",
          "count": 17
        },
        {
          "type": "phone",
          "count": 17
        },
        {
          "type": "address",
          "count": 17
        },
        {
          "type": "payment",
          "count": 17
        },
        {
          "type": "session",
          "count": 17
        },
        {
          "type": "subscription_validity",
          "count": 17
        },
        {
          "type": "credit_availability",
          "count": 17
        },
        {
          "type": "email_format",
          "count": 17
        },
        {
          "type": "phone_format",
          "count": 17
        },
        {
          "type": "required_fields",
          "count": 17
        },
        {
          "type": "format_check",
          "count": 32
        },
        {
          "type": "required_check",
          "count": 32
        },
        {
          "type": "israeli_format",
          "count": 28
        },
        {
          "type": "auto_formatting",
          "count": 28
        },
        {
          "type": "credential_check",
          "count": 5
        },
        {
          "type": "session_creation",
          "count": 5
        },
        {
          "type": "role_check",
          "count": 5
        },
        {
          "type": "permission_validation",
          "count": 5
        },
        {
          "type": "card_validation",
          "count": 8
        },
        {
          "type": "amount_validation",
          "count": 8
        },
        {
          "type": "security_check",
          "count": 8
        },
        {
          "type": "error_handling",
          "count": 8
        },
        {
          "type": "retry_mechanism",
          "count": 8
        },
        {
          "type": "token_validity",
          "count": 16
        },
        {
          "type": "booking_availability",
          "count": 16
        },
        {
          "type": "response_timeout",
          "count": 16
        },
        {
          "type": "timeout_mechanism",
          "count": 16
        },
        {
          "type": "fallback_logic",
          "count": 16
        }
      ]
    }
  ],
  "testScenarios": [
    {
      "type": "end_to_end",
      "count": 34,
      "scenarios": [
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully",
          "sourceFile": "booking-actions.ts"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit",
          "sourceFile": "booking-actions.ts"
        },
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully",
          "sourceFile": "guest-booking-wizard.tsx"
        },
        {
          "id": "booking_member_subscription",
          "name": "Member Booking with Subscription",
          "type": "end_to_end",
          "userRoles": [
            "member"
          ],
          "steps": [
            "Member logs in",
            "Member selects subscription treatment",
            "System checks subscription credits",
            "Member chooses date/time",
            "System deducts credit",
            "System creates booking"
          ],
          "validations": [
            "session",
            "subscription_validity",
            "credit_availability"
          ],
          "expectedResult": "Booking created using subscription credit",
          "sourceFile": "guest-booking-wizard.tsx"
        },
        {
          "id": "booking_guest_happy_path",
          "name": "Guest Booking - Happy Path",
          "type": "end_to_end",
          "userRoles": [
            "guest"
          ],
          "steps": [
            "User fills booking form",
            "System validates data",
            "User selects treatment",
            "User chooses date/time",
            "User enters address",
            "User makes payment",
            "System creates booking",
            "System notifies professionals"
          ],
          "validations": [
            "email",
            "phone",
            "address",
            "payment"
          ],
          "expectedResult": "Booking created successfully",
          "sourceFile": "admin-bookings-columns.tsx"
        }
      ]
    },
    {
      "type": "error_handling",
      "count": 25,
      "scenarios": [
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed",
          "sourceFile": "booking-actions.ts"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed",
          "sourceFile": "guest-booking-wizard.tsx"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed",
          "sourceFile": "admin-bookings-columns.tsx"
        },
        {
          "id": "payment_failure",
          "name": "Payment Processing Failure",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "Payment gateway declines",
            "System handles payment failure",
            "System shows error message",
            "User can retry with different method"
          ],
          "validations": [
            "error_handling",
            "retry_mechanism"
          ],
          "expectedResult": "Clear error message with retry option",
          "sourceFile": "guest-payment-step.tsx"
        },
        {
          "id": "booking_validation_errors",
          "name": "Booking with Validation Errors",
          "type": "error_handling",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User submits invalid data",
            "System validates input",
            "System returns validation errors",
            "User corrects errors",
            "System re-validates"
          ],
          "validations": [
            "email_format",
            "phone_format",
            "required_fields"
          ],
          "expectedResult": "Clear error messages displayed",
          "sourceFile": "booking-schemas.ts"
        }
      ]
    },
    {
      "type": "validation",
      "count": 60,
      "scenarios": [
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case",
          "sourceFile": "booking-actions.ts"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected",
          "sourceFile": "booking-actions.ts"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case",
          "sourceFile": "gift-voucher-actions.ts"
        },
        {
          "id": "phone_validation_israeli",
          "name": "Israeli Phone Validation",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "+972501234567",
              "expected": "pass"
            },
            {
              "input": "0501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "972501234567",
              "expected": "pass_after_format"
            },
            {
              "input": "+1234567890",
              "expected": "fail"
            },
            {
              "input": "invalid",
              "expected": "fail"
            }
          ],
          "validations": [
            "israeli_format",
            "auto_formatting"
          ],
          "expectedResult": "Israeli phone numbers accepted, others rejected",
          "sourceFile": "gift-voucher-actions.ts"
        },
        {
          "id": "email_validation_comprehensive",
          "name": "Email Validation - All Cases",
          "type": "validation",
          "userRoles": [
            "guest",
            "member"
          ],
          "testCases": [
            {
              "input": "valid@example.com",
              "expected": "pass"
            },
            {
              "input": "invalid-email",
              "expected": "fail"
            },
            {
              "input": "test@",
              "expected": "fail"
            },
            {
              "input": "@domain.com",
              "expected": "fail"
            },
            {
              "input": "",
              "expected": "fail"
            }
          ],
          "validations": [
            "format_check",
            "required_check"
          ],
          "expectedResult": "Appropriate validation response for each case",
          "sourceFile": "user-subscription-actions.ts"
        }
      ]
    },
    {
      "type": "authentication",
      "count": 5,
      "scenarios": [
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in",
          "sourceFile": "auth.ts"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in",
          "sourceFile": "auth-actions.ts"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in",
          "sourceFile": "login-form.tsx"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in",
          "sourceFile": "auth-redirect.tsx"
        },
        {
          "id": "auth_login_flow",
          "name": "User Login Flow",
          "type": "authentication",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User enters credentials",
            "System validates credentials",
            "System creates session",
            "User redirected to dashboard"
          ],
          "validations": [
            "credential_check",
            "session_creation"
          ],
          "expectedResult": "User successfully logged in",
          "sourceFile": "auth-provider.tsx"
        }
      ]
    },
    {
      "type": "authorization",
      "count": 5,
      "scenarios": [
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles",
          "sourceFile": "auth.ts"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles",
          "sourceFile": "auth-actions.ts"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles",
          "sourceFile": "login-form.tsx"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles",
          "sourceFile": "auth-redirect.tsx"
        },
        {
          "id": "auth_role_based_access",
          "name": "Role-Based Access Control",
          "type": "authorization",
          "userRoles": [
            "member",
            "professional",
            "admin"
          ],
          "steps": [
            "User attempts to access resource",
            "System checks user role",
            "System grants/denies access",
            "Appropriate response returned"
          ],
          "validations": [
            "role_check",
            "permission_validation"
          ],
          "expectedResult": "Access granted only to authorized roles",
          "sourceFile": "auth-provider.tsx"
        }
      ]
    },
    {
      "type": "integration",
      "count": 24,
      "scenarios": [
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully",
          "sourceFile": "guest-payment-step.tsx"
        },
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional",
          "sourceFile": "professional-actions.ts"
        },
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional",
          "sourceFile": "professional-sms-actions.ts"
        },
        {
          "id": "payment_success",
          "name": "Successful Payment Processing",
          "type": "integration",
          "userRoles": [
            "guest",
            "member"
          ],
          "steps": [
            "User enters payment details",
            "System validates payment method",
            "System processes payment",
            "Payment gateway confirms",
            "System updates booking status"
          ],
          "validations": [
            "card_validation",
            "amount_validation",
            "security_check"
          ],
          "expectedResult": "Payment processed successfully",
          "sourceFile": "payment-method-actions.ts"
        },
        {
          "id": "professional_sms_response",
          "name": "Professional SMS Response",
          "type": "integration",
          "userRoles": [
            "professional"
          ],
          "steps": [
            "Professional receives SMS",
            "Professional clicks response link",
            "System validates response token",
            "Professional accepts/declines booking",
            "System updates booking status",
            "System notifies customer"
          ],
          "validations": [
            "token_validity",
            "booking_availability",
            "response_timeout"
          ],
          "expectedResult": "Booking assigned to professional",
          "sourceFile": "professional-profile.ts"
        }
      ]
    },
    {
      "type": "timeout_handling",
      "count": 16,
      "scenarios": [
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional",
          "sourceFile": "professional-actions.ts"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional",
          "sourceFile": "professional-sms-actions.ts"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional",
          "sourceFile": "professional-profile.ts"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional",
          "sourceFile": "professional-booking-view-actions.ts"
        },
        {
          "id": "professional_timeout",
          "name": "Professional Response Timeout",
          "type": "timeout_handling",
          "userRoles": [
            "professional",
            "admin"
          ],
          "steps": [
            "Professional receives SMS",
            "30 minutes pass without response",
            "System marks professional as non-responsive",
            "System notifies next professional",
            "Admin monitors assignment process"
          ],
          "validations": [
            "timeout_mechanism",
            "fallback_logic"
          ],
          "expectedResult": "Booking reassigned to next professional",
          "sourceFile": "professional-responses-dialog.tsx"
        }
      ]
    }
  ]
}